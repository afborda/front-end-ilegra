{"ast":null,"code":"import _slicedToArray from \"/media/afborda/Dados/Estudos/React_Node/nao-acredito/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/afborda/Dados/Estudos/React_Node/nao-acredito/src/App.js\";\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport \"./App.css\";\n\nconst App = () => {\n  const Todo = ({\n    todo,\n    index\n  }) => React.createElement(\"div\", {\n    style: {\n      textDecoration: todo.isCompleted ? \"line-through\" : \"\"\n    },\n    className: \"todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, todo.text);\n\n  const _useState = useState([{\n    text: \"Estudar ReactJS\",\n    isCompleted: false\n  }, {\n    text: \"Estudar HOOKS\",\n    isCompleted: false\n  }, {\n    text: \"Estudar Angular\",\n    isCompleted: false\n  }, {\n    text: \"Buscar Comida\",\n    isCompleted: true\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const addTodo = text => {\n    const NewTodos = [...todos, {\n      text\n    }];\n    setTodos(NewTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, todos.map((todo, index) => React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/media/afborda/Dados/Estudos/React_Node/nao-acredito/src/App.js"],"names":["React","useState","TodoForm","App","Todo","todo","index","textDecoration","isCompleted","text","todos","setTodos","addTodo","NewTodos","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,IAAI,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KACX;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAEF,IAAI,CAACG,WAAL,GAAmB,cAAnB,GAAoC;AAAtD,KADT;AAEE,IAAA,SAAS,EAAC,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGH,IAAI,CAACI,IAJR,CADF;;AADgB,oBASUR,QAAQ,CAAC,CACjC;AACEQ,IAAAA,IAAI,EAAE,iBADR;AAEED,IAAAA,WAAW,EAAE;AAFf,GADiC,EAKjC;AACEC,IAAAA,IAAI,EAAE,eADR;AAEED,IAAAA,WAAW,EAAE;AAFf,GALiC,EASjC;AACEC,IAAAA,IAAI,EAAE,iBADR;AAEED,IAAAA,WAAW,EAAE;AAFf,GATiC,EAajC;AACEC,IAAAA,IAAI,EAAE,eADR;AAEED,IAAAA,WAAW,EAAE;AAFf,GAbiC,CAAD,CATlB;AAAA;AAAA,QASTE,KATS;AAAA,QASFC,QATE;;AA4BhB,QAAMC,OAAO,GAAGH,IAAI,IAAI;AACtB,UAAMI,QAAQ,GAAG,CAAC,GAAGH,KAAJ,EAAW;AAAED,MAAAA;AAAF,KAAX,CAAjB;AACAE,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAED,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACI,GAAN,CAAU,CAACT,IAAD,EAAOC,KAAP,KACT,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,KAAK,EAAEA,KAAzB;AAAgC,IAAA,IAAI,EAAED,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CA3CD;;AA6CA,eAAeF,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport \"./App.css\";\n\nconst App = () => {\n  const Todo = ({ todo, index }) => (\n    <div\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n      className=\"todo\"\n    >\n      {todo.text}\n    </div>\n  );\n  const [todos, setTodos] = useState([\n    {\n      text: \"Estudar ReactJS\",\n      isCompleted: false\n    },\n    {\n      text: \"Estudar HOOKS\",\n      isCompleted: false\n    },\n    {\n      text: \"Estudar Angular\",\n      isCompleted: false\n    },\n    {\n      text: \"Buscar Comida\",\n      isCompleted: true\n    }\n  ]);\n\n  const addTodo = text => {\n    const NewTodos = [...todos, { text }];\n    setTodos(NewTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <TodoForm addTodo={addTodo} />\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo key={index} index={index} todo={todo} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}